{"ast":null,"code":"// Always initialize state\nconst initialState = {\n  loggedInStatus: localStorage['isLogged'] === 'true'\n}; // then push the state that is initialized int o the reducer for action\n// \n\nconst Reducer = function () {\n  let currentState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'USER_LOGIN':\n      localStorage.setItem('isLogged', true);\n      return { ...currentState,\n        loggedInStatus: true\n      };\n\n    case 'USER_LOGOUT':\n      localStorage.setItem('isLogged', false);\n      return { ...currentState,\n        loggedInStatus: false\n      };\n\n    default:\n      return { ...currentState\n      };\n  }\n};\n\n_c = Reducer;\nexport default Reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["E:/edyoda-projects/React-final-project/src/Redux/Reducer.js"],"names":["initialState","loggedInStatus","localStorage","Reducer","currentState","action","type","setItem"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAEC,YAAY,CAAE,UAAF,CAAZ,KAA+B;AAD9B,CAArB,C,CAIA;AACA;;AACA,MAAMC,OAAO,GAAG,YAAyC;AAAA,MAAxCC,YAAwC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAErD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACIJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACA,aAAO,EAAC,GAAGH,YAAJ;AAAkBH,QAAAA,cAAc,EAAE;AAAlC,OAAP;;AACJ,SAAK,aAAL;AACQC,MAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiC,KAAjC;AACA,aAAO,EAAC,GAAGH,YAAJ;AAAkBH,QAAAA,cAAc,EAAE;AAAlC,OAAP;;AACR;AACI,aAAO,EAAC,GAAGG;AAAJ,OAAP;AARR;AAUH,CAZD;;KAAMD,O;AAcN,eAAeA,OAAf","sourcesContent":["// Always initialize state\nconst initialState = {\n    loggedInStatus: localStorage[('isLogged')] === 'true'\n};\n\n// then push the state that is initialized int o the reducer for action\n// \nconst Reducer = (currentState = initialState, action) => {\n\n    switch(action.type) {\n        case 'USER_LOGIN':\n            localStorage.setItem('isLogged', true);\n            return {...currentState, loggedInStatus: true};\n        case 'USER_LOGOUT':\n                localStorage.setItem('isLogged', false);\n                return {...currentState, loggedInStatus: false};\n        default:\n            return {...currentState};\n    }\n}\n\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}